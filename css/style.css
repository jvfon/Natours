/*
colors:

light green: #7ed56f
medium green: #55c57a
dark green: #28b485
*/

/* making every browser read the page the same way */
* { /* the universal selector will grab every single tag and apply the declarations */
    margin: 0; /* remove the default margin and padding */
    padding: 0;
    box-sizing: border-box; /* changes box border model, margin and */
    /* padding are no longer added to the total width/height that we specify for boxes */
}

body { /* font properites changed in the body tag because font properties are inherited */
    font-family: "Lato", sans-serif; /* the parent element will be inherited by all children elements */
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7; /* 1.7 times bigger than predefined line height */
    color: #777;
    padding: 30px; /* white border, doesn't get inherited */
}

.header {
    height: 95vh; /* at every point, the box will be 95% of the viewport height */
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(26, 243, 171, 0.8)), url("../img/hero.jpg"); 
    /* 2 images one of top of the other */
    /* to right bottom means the gradient starts at the upper left corner and goes to the bottom right */
    /* change opacity, hover over color, click top of color picker to change to rgba */
        /* move slider down to 0.8  - 80% of the color is visible */
    /* to get to the image we need to go one folder up ../ */
    
    background-size: cover; /* cover tries to fit element inside of the box */
    background-position: top; /* makes the top of the image stay at the top of the container */
        /* the browser resizes, the image at the top stays the same */  
        
    position: relative;

    /* specify a polygon where image will still be visible */
    /* specify 4 corners that make up a window where the img will show through */
    /* start at the top left corner and move clockwise */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    /* (x y, x y, x y, x y); (0 0 starts at zero */
    /* (100% 0) we want 100% in the x direction but no change on y axis */
    /* we can use any other unit we want */
    /* 75vh = 75% of the viewport height, changes when browser is resized */
}    

.logo-box {
    position: absolute;
    top: 40px; /* the reference position from where top/left start is the */
    left: 40px; /* parent element that has position: relative, the header */
                /* look at the html file to see who is the parent */
}

.logo {
    height: 35px; /* the width will scale accordinly */
}

.text-box {
    position: absolute;
    top: 40%; /* 40% of the parent height */
    left: 50%;
    transform: translate(-50%, -50%); /* -50% on X and Y coordinates in relation */ 
                                    /* to the element itself, not the parent element */
}


.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* at the end of an animation, the animated elements seem to */ 
    /* move up a little, to fix it: */
    backface-visibility: hidden;

}

/* display both lines as block elements */
/* they will take up the whole width */
/* a line break is created */
.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400; /* by default h1 has a higher font-weight */
    letter-spacing: 35px;

    /* to make the animation work we need the name of the animation and */
    /* its duration */
    animation-name: moveInLeft;
    animation-duration: 1s;

    /* a function that defines how animation will proceed */
    /* how fast/slow the parameter specified at @keyframes will proceed over time */
    /* the animation will become slower as it ends */
    animation-timing-function: ease-out;
    
    /* animation repeated 3 times */
    /*animation-iteration-count: 3;
    animation-delay: 3s;
    */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
 
    /* can be summarized below */
    /* animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; */
    animation: moveInRight 1s ease-out;
}

/* for browser performance is better to animate only 2 different properites: */
/* opacity and transform */
@keyframes moveInLeft { /* moveInLeft, name of the animation */  
    /* specify what happens every moment in the animation */
    /* 0% is before the animation actually starts */
    /* opacity 0, the element is invisible */
    0% {
        opacity: 0;

        /* we want the element to move on the x axis  */
        /* -100 becuase we want the element to start more to the left */
        /* the animation goes from left to right. */
        /* a positive value means it goes to the right */
        transform: translateX(-100px);
    }

    80% {
        /* the element moves a little bit to the right */
        transform: translateX(10px);
    }

    /* when the animation finishes */
    /* opacity 1, the element is visible */
    100% {
        opacity: 1;

        /* we want the element to stay put at the end of the animation */    
        transform: translate(0);
    }
}

@keyframes moveInRight {

    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;   
        transform: translate(0);
    }
}
